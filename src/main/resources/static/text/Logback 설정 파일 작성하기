서비스가 실행되면 여러가지 정보를 로그에 남긴다.
1. 어떤 내용을 로그로 남길지?
2. 로그레벨 목적에 맞게 나누고 어떤 로그 레벨부터 로그에 남도록 할 건지 설정

우리가 남긴 로그는 어디에 남을까?
로컬 - 우리가 코드이외 설정을 따로 하지 않은 상태라면
* 콘솔 창(아래 터미널)창에 로그가 찍혀있을거다.

🚨로그가 문제 해결에 활용하기 위해서는
🚨실행되는 시점이 아닌 시간이 지난 후에도 로그를 볼 수 있어야한다.
즉 파일 형태로 남아 있어야 할 필요가 있다.

로그 백
- 콘솔
- 파일
- 그외 무언가
🔽
Elasticsearch에 들어간 로그를 시각화 하기위해
🔼
Kibana 툴을 사용할거다.



@Slf4j 자주사용하지?

      - Logback
Slf4j - Log4j
      - 기타 로깅 프레임워크


 로깅 프레임워크는 Slf4j의 구현체이기 때문에 다른 프레임워크로 변경해도~
 @Slf4j는 그대로 두면됨


PSA 개념
- 이런식으로 특정한 구형 기술에 의존하지 않고 코드를 작성할 수 있도록 추상화 계층을 두는 개념
ㄴ 스프링 프레임워크에서도 주요하게 다뤄지는 PSA에 대한 개념이다.
ㄴ 예시 : @Transactional도 대표적인 사례
ㄴㄴ 어떤 DB 접근 기술 구현체를 사용하는지와 무관하게 트랜잭셔널 애너테이션만으로도 트랜잭셔널한 기능을 수행하도록 도와준다.


logback.xml
application-dev.log

------------------
Appender 종류
1. ConsoleAppender :  콘솔에 로그를 로그를 출력한다.(간단)
ㄴ 기본적으로 ansi 색상을 사용하여 로그 레벨에 따라 색상이 달라진다.
ㄴ 옵션
ㄴㄴ encoder : 로그 형식 지정
ㄴㄴ target :  로그를 출력할 대상(System.out 또는 System.err)

2. FileAppender
ㄴ 지정된 파일에 로그를 기록한다.
ㄴ 단일파일에 계속에서 로그를 기록하는것

3. 💫RollingFileAppender
ㄴ 로그 파일을 자동으로 롤링(분할)하여 관리하는것

4. AsyncAppender
ㄴ 비동기적으로 로그를 기록하여 성능을 개선한다.
ㄴ 빠르다고 함.(그래도 엄청난 영향을 끼치는 로그가 아니라면 무조건 사용은 아니다)

5. SocketAppender
ㄴ 소켓을 통해 로그를 원격 서버로 전송합니다.
ㄴ 원하는 ip나 도메인 주소를 적어 로그를 저장한다. + port

6. CustomAppender
ㄴ 사용자 정의 Appender를 만들어 특정 요구사항에 맞게 로그를 처리할 수 있다.

등등(많군..)


